Тимошенко Алёна Б04-103
1) Из каких сегментов состоит структура памяти процесса?
a) Стек: область памяти, небольшого ограниченного размера, в
которой хранится информация о локальных переменных (в функции).
б) Свободное пространство: область памяти, находящаяся между
кучей и стеком.
в) Куча: область памяти (размер больше, чем у стека), которая
растёт, когда запрашивается память для данных.
г) Сегмент данных и кода.

2) Каким образом связаны встроенные указатели и массивы?
Адреса элементов в массиве идут по порядку, следовательно,
зная длину массива и имея указатель на первый его элемент, можно
получить доступ к каждому элементу массива.

3) Почему низкоуровневая работа с памятью небезопасна?
Для работы программы ОС резервирует какое-то количество
участков памяти. Для того, чтобы удалить неиспользуемый объект,
необходимо использовать оператор delete[]. Но можно случайно
совершить ошибку в коде, что приведет к утечке памяти.Из-за этого
программа экстренно закрывается,, что может повлечь повреждение
файлов, с которыми до этого происходила работа.

4) Что такое ссылка и чем она отличается от указателя?
Ссылка - автоматически разыменуемый константный указатель,
не поддерживающий nullptr режим. То есть, в отличие от указателя:
а) Для обращению к элементу по ссылке не нужно приписывать
к названию ссылки *.
б) Ссылке нельзя присвоить другой адрес, у нее постоянный
адрес.
в) Нельзя сделать ссылку на "ничто".

5) Какими способами можно передать данные в функцию?
a) По значению. При этом происходит копирование всех
передаваемых данных, что эффективно для небольших размеров
данных, однако нерационально для больших.
б) Через указатель. Не происходит копирования самих
данных,что эффективно для данных больших размеров. Для работы с
переменными придётся использовать * и &.
c) Передача по ссылке. Копирования данных не происходит =>
эффективен для больших данных, но не для маленьких. При этом не
нужно использовать * для разыменования
